[{"/home/gourav-saini/WebstormProjects/fyle-challenge/src/index.tsx":"1","/home/gourav-saini/WebstormProjects/fyle-challenge/src/reportWebVitals.ts":"2","/home/gourav-saini/WebstormProjects/fyle-challenge/src/App.tsx":"3","/home/gourav-saini/WebstormProjects/fyle-challenge/src/types/Types.ts":"4","/home/gourav-saini/WebstormProjects/fyle-challenge/src/pages/BranchDetail.tsx":"5","/home/gourav-saini/WebstormProjects/fyle-challenge/src/pages/Branches.tsx":"6","/home/gourav-saini/WebstormProjects/fyle-challenge/src/components/DataTable.tsx":"7"},{"size":500,"mtime":1608215734108,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1608215734108,"results":"10","hashOfConfig":"9"},{"size":486,"mtime":1608267640603,"results":"11","hashOfConfig":"9"},{"size":300,"mtime":1608261150144,"results":"12","hashOfConfig":"9"},{"size":5459,"mtime":1608269269766,"results":"13","hashOfConfig":"9"},{"size":8274,"mtime":1608269269762,"results":"14","hashOfConfig":"9"},{"size":3413,"mtime":1608264717963,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wq5w6g",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/gourav-saini/WebstormProjects/fyle-challenge/src/index.tsx",[],["32","33"],"/home/gourav-saini/WebstormProjects/fyle-challenge/src/reportWebVitals.ts",[],"/home/gourav-saini/WebstormProjects/fyle-challenge/src/App.tsx",[],"/home/gourav-saini/WebstormProjects/fyle-challenge/src/types/Types.ts",[],"/home/gourav-saini/WebstormProjects/fyle-challenge/src/pages/BranchDetail.tsx",["34"],"import React, {useEffect, useState} from \"react\";\nimport {Card, CardContent, CircularProgress, Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {branch, REQUEST_STATUS} from \"../types/Types\";\nimport {withRouter} from \"react-router-dom\";\nimport axios from \"axios\";\nimport ls from 'localstorage-ttl';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    card: {\n        width: '80%',\n        margin: \"auto\",\n        marginTop: \"15vh\"\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    progress: {\n        display: \"flex\",\n        height: \"40vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 4, 3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        width: '30vw',\n        height: '30vh',\n    },\n}));\n\nfunction BranchDetail({match}: any): JSX.Element {\n    const classes = useStyles();\n\n    const [status, setStatus] = useState<REQUEST_STATUS>(REQUEST_STATUS.SUCCEED);\n    const [branch, setBranch] = useState<branch | null>(null);\n\n    useEffect(() => {\n        setStatus(REQUEST_STATUS.LOADING);\n        const {params: {branchID}} = match;\n        const url: string = `https://fyle-challenge-backend.herokuapp.com/api/branches/${branchID}`;\n        const cache: string | null = ls.get(url);\n        if (cache) {\n            setStatus(REQUEST_STATUS.SUCCEED);\n            setBranch(JSON.parse(cache));\n        } else {\n            axios.get(url)\n                .then(res => {\n                    setStatus(REQUEST_STATUS.SUCCEED);\n                    setBranch(res.data);\n                    ls.set(url, JSON.stringify(res.data), [10 * 60 * 1000]);\n                })\n                .catch(err => {\n                    setStatus(REQUEST_STATUS.ERROR);\n                    console.error(err.response);\n                })\n        }\n    }, []);\n\n    const getContent = (): JSX.Element => {\n\n        switch (status) {\n            case REQUEST_STATUS.SUCCEED:\n                if (!branch)\n                    return (\n                        <div>Branch data unavailable</div>\n                    );\n                return (\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {branch.branch}\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            {branch.city}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\">\n                            IFSC :&nbsp;\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\n                            {branch.ifsc}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"body2\" component=\"span\">\n                            Bank :&nbsp;\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\n                            {branch.bank}\n                        </Typography>\n                        <br/>\n                        <br/>\n\n                        <Typography variant=\"body1\" component=\"h6\">\n                            Address\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\n                            {branch.address}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"body2\" component=\"span\">\n                            District :&nbsp;\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\n                            {branch.district}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"body2\" component=\"span\">\n                            State :&nbsp;\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\n                            {branch.state}\n                        </Typography>\n\n                    </CardContent>\n                );\n            case REQUEST_STATUS.ERROR:\n                return (\n                    <div>An Error Occurred</div>\n                );\n            default:\n                return (\n                    <div className={classes.progress}>\n                        <CircularProgress/>\n                    </div>\n                );\n        }\n    }\n\n    return (\n        <div style={{marginTop: \"100px\", padding: \"10px 150px\"}}>\n            <Typography variant=\"h3\" component=\"h3\">\n                Branch Details\n            </Typography>\n            <Card className={classes.card} variant=\"outlined\">\n                {\n                    getContent()\n                }\n            </Card>\n        </div>\n    );\n}\n\n// @ts-ignore\nexport default withRouter(BranchDetail);","/home/gourav-saini/WebstormProjects/fyle-challenge/src/pages/Branches.tsx",["35"],"/home/gourav-saini/WebstormProjects/fyle-challenge/src/components/DataTable.tsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":72,"column":8,"nodeType":"42","endLine":72,"endColumn":10,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":67,"column":8,"nodeType":"42","endLine":67,"endColumn":27,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBranches' needs the current value of 'query'.",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [match]",{"range":"54","text":"55"},"Update the dependencies array to be: [filterQuery, data, query]",{"range":"56","text":"57"},[2232,2234],"[match]",[2880,2899],"[filterQuery, data, query]"]